{
  "name": "api",
  "version": "0.0.1",
  "description": "Server ts-nest-graphql-microservice-nats-docker",
  "author": "BipRaider",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "prebuild": "rimraf dist",
    "build": "nest build",
    "format": "prettier --write \"apps/**/*.ts\" \"libs/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node ./dist/main.js",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./apps/api/test/jest-e2e.json",
    "docker:up": "docker-compose up -d",
    "docker:up:api": "docker-compose rm -sf api && docker-compose -f docker-compose.yaml up -d api",
    "docker:up:user": "docker-compose rm -sf user && docker-compose -f docker-compose.yaml up -d user",
    "docker:stop": "docker-compose stop api",
    "docker:log": "docker-compose logs -f --tail 100 api",
    "docker:clear": "docker volume prune",
    "docker:node": "docker-compose exec api node"
  },
  "dependencies": {
    "@apollo/server": "^4.3.1",
    "@apollo/subgraph": "^2.2.3",
    "@graphql-tools/merge": "^8.3.15",
    "@graphql-tools/schema": "^9.0.13",
    "@graphql-tools/utils": "^9.1.4",
    "@nestjs/apollo": "^10.1.7",
    "@nestjs/common": "^9.0.0",
    "@nestjs/config": "^2.2.0",
    "@nestjs/core": "^9.0.0",
    "@nestjs/graphql": "^10.1.7",
    "@nestjs/jwt": "^10.0.1",
    "@nestjs/microservices": "^9.2.1",
    "@nestjs/mongoose": "^9.2.1",
    "@nestjs/passport": "^9.0.0",
    "@nestjs/platform-express": "^9.0.0",
    "@nestjs/serve-static": "^3.0.0",
    "apollo-datasource-mongodb": "^0.5.4",
    "apollo-server": "^3.11.1",
    "apollo-server-core": "^3.11.1",
    "apollo-server-express": "^3.11.1",
    "axios": "^1.2.2",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.13.2",
    "cookie-parser": "^1.4.6",
    "crypto": "^1.0.1",
    "crypto-js": "^4.1.1",
    "dotenv": "^16.0.3",
    "graphql": "^16.6.0",
    "graphql-query-complexity": "^0.12.0",
    "graphql-scalars": "^1.20.1",
    "graphql-subscriptions": "^2.0.0",
    "graphql-tools": "^8.3.15",
    "graphql-type-json": "^0.3.2",
    "graphql-ws": "^5.11.2",
    "helmet": "^6.0.1",
    "http-status-codes": "^2.2.0",
    "mongoose": "^6.8.3",
    "nats": "^2.10.2",
    "nestjs-pino": "^3.1.1",
    "passport": "^0.6.0",
    "passport-jwt": "^4.0.1",
    "passport-local": "^1.0.0",
    "pino": "^8.8.0",
    "reflect-metadata": "^0.1.13",
    "rimraf": "^3.0.2",
    "rxjs": "^7.8.0",
    "ts-morph": "^17.0.1",
    "util": "^0.12.5",
    "uuid": "^9.0.0"
  },
  "devDependencies": {
    "@nestjs/cli": "^9.0.0",
    "@nestjs/schematics": "^9.0.0",
    "@nestjs/testing": "^9.0.0",
    "@types/cookie-parser": "^1.4.3",
    "@types/express": "^4.17.13",
    "@types/http-status-codes": "^1.2.0",
    "@types/jest": "28.1.8",
    "@types/mongoose": "^5.11.97",
    "@types/node": "^16.0.0",
    "@types/passport-jwt": "^3.0.8",
    "@types/passport-local": "^1.0.34",
    "@types/supertest": "^2.0.11",
    "@typescript-eslint/eslint-plugin": "^5.0.0",
    "@typescript-eslint/parser": "^5.0.0",
    "eslint": "^8.0.1",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-prettier": "^4.0.0",
    "jest": "28.1.3",
    "prettier": "^2.3.2",
    "source-map-support": "^0.5.20",
    "supertest": "^6.1.3",
    "ts-jest": "28.0.8",
    "ts-loader": "^9.2.3",
    "ts-node": "^10.0.0",
    "tsconfig-paths": "4.1.0",
    "typescript": "^4.7.4",
    "webpack": "^5.75.0"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": ".",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "./coverage",
    "testEnvironment": "node",
    "roots": [
      "<rootDir>/apps/",
      "<rootDir>/common/"
    ]
  }
}
